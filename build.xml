<!-- Ant build script -->
<project name="BinMaster" default="build-clean" basedir="./src/Dugeon/">
	<description>
       	Build BinMaster game
    </description>

	<property name="project_name" value="BinMaster" />
	<property name="main_class_client" value="com.rmit.sea.dungeon.Dungeon" />
	<property name="main_class_server" value="com.rmit.sea.webserver.WebServer" />

	<!-- set global properties for this build -->
    <property name="lib" location="lib" />
    <property name="res" location="res" />
	<property name="src" location="src" />
	
	<property name="build" location="build" />
	<property name="build-test" location="${build}/test" />
	<property name="dist" location="dist" />
	<property name="dist-res" location="${dist}/res" />
    
	<target name="init" description="initialize the build environment">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create directory structures -->
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>

	<target name="compile" description="compile the source" depends="init">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" includeantruntime="false">
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
    </target>

	<target name="test" depends="compile" description="run test suites">
	   <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
                <pathelement location="${src}" />
                 <pathelement location="${build}" />
                <fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
                <pathelement location="${dist}" />
            </classpath>
            
            <formatter type="brief" usefile="false" />
				
			<batchtest>
				<fileset dir="${src}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
        
         <!-- delete all tests which are built before -->
        <delete dir="${build-test}" />
    </target>


	<target name="dist-client" depends="test" description="generate the distribution">
       <!-- create the jar file -->
        <jar jarfile="${dist}/${project_name}-${DSTAMP}-client.jar" basedir="${build}">
        
            <!-- Put everything in ${lib} into the jar file, except junit and mockito libs -->
			<zipgroupfileset dir="${lib}" includes="*.jar">
                <exclude name="*junit*" />
                <exclude name="*mockito" />
            </zipgroupfileset>
            
            <!-- copy Spring beans file to the jar file -->
			<fileset dir="${src}" casesensitive="yes">
  				<filename name="*.xml"/>
			</fileset>

            <!-- Set the main class in jar manifest -->
			<manifest>
				<attribute name="Main-Class" value="${main_class_client}" />
			</manifest>
		</jar>
        
        <!-- copy recource files to the same dir with jar file -->
        <copy todir="${dist-res}">
            <fileset dir="${res}">
                <filename name="*.*" />
            </fileset>
        </copy>
	</target>
    
    <target name="dist-server" depends="test" description="generate the distribution">
       <!-- create the jar file -->
        <jar jarfile="${dist}/${project_name}-${DSTAMP}-server.jar" basedir="${build}">
        
           <!-- Set the main class in jar manifest -->
			<manifest>
				<attribute name="Main-Class" value="${main_class_server}" />
			</manifest>
		</jar>
	</target>

	<target name="build-clean" description="clean up" depends="dist-client, dist-server">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
        
        <echo message="BUILD SUCCESSFUL" />
        <echo message="To run the program:" />
        <echo message="     cd src/Dugeon/dist/" />
        <echo message="     java -jar BinMaster-*-server.jar" />
        <echo message="     java -jar BinMaster-*-client.jar" />
        <echo message="Enjoy it !!!" />
	</target>

</project>
